<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weizi.common.mapper.MovieMapper">
    <resultMap id="MovieDTOResultMap" type="com.weizi.common.domain.dto.MovieDTO">
        <id column="movie_id" property="movieId"/>
        <result property="movieName" column="movie_name"/>
        <result property="fileType" column="file_type"/>
        <result property="fileSize" column="file_size"/>
        <result property="isMerge" column="is_merge"/>
        <result property="isPlayer" column="is_player"/>
        <result property="status" column="status"/>
        <result property="channelId" column="channel_id"/>
        <result property="mainPoster" column="main_poster"/>
        <result property="poster" column="poster"/>
        <result property="movieMd5" column="movie_md5"/>
        <result property="adminId" column="admin_id"/>
        <result property="movieShardTotal" column="movie_shard_total"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="MovieParamResult" type="com.weizi.common.domain.dto.dataParam.MovieParam">
        <id property="movieId" column="movie_id"/>
        <result property="movieName" column="movie_name"/>
        <result property="movieMd5" column="movie_md5"/>
        <result property="status" column="status"/>
        <result property="mainPoster" column="main_poster"/>
        <result property="poster" column="poster"/>
        <!-- 使用collection来处理多对多关系 -->
        <result property="genreIdList" column="genre_ids" typeHandler="com.weizi.common.utils.IdsStringToListTypeHandler"/>
    </resultMap>


    <select id="countTotal" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            movie
        <where>
            <if test="movieName != null and movieName != ''">
                movie_name like concat('%', #{movieName}, '%')
            </if>
        </where>
    </select>

    <select id="selectMoviePage" resultMap="MovieDTOResultMap">
        SELECT
            movie_id,
            movie_name,
            file_type,
            file_size,
            is_merge,
            is_player,
            status,
            channel_id,
            main_poster,
            poster,
            movie_md5,
            admin_id,
            movie_shard_total,
            create_time,
            update_time
        FROM
        movie
        <where>
            <if test="movieName != null and movieName != ''">
                movie_name like concat('%', #{movieName}, '%')
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{pageNum}, #{pageSize}
    </select>

    <update id="updateMergeChunksByMovieId">
        UPDATE movie
        SET
            is_merge = true,
            update_time = now()
        WHERE
            movie_id = #{movieId}
    </update>

    <update id="updateIsPlayerByMovieMd5">
        UPDATE movie
        SET
            is_player = true,
            update_time = now()
        WHERE
            movie_md5 = #{movieMd5}
    </update>

    <update id="updateMainPosterById">
        UPDATE movie
        SET
            main_poster = #{mainPoster},
            update_time = now()
        WHERE
            movie_id = #{movieId}
    </update>

    <update id="updatePosterById">
        UPDATE movie
        SET
            poster = #{poster},
            update_time = now()
        WHERE
            movie_id = #{movieId}
    </update>

    <update id="updateMovie">
         UPDATE movie
         SET
             movie_name = #{movieName},
             status = #{status},
             channel_id = #{channelId},
             update_time = now()
         WHERE
             movie_id = #{movieId}
    </update>
    <update id="updateMovieGroup">
        UPDATE movie
        SET
            status = #{status},
            channel_id = #{channelId},
            update_time = now()
        WHERE
            movie_id IN
            <foreach collection="movieIdList" item="movieId" separator="," open="(" close=")">
                #{movieId}
            </foreach>
    </update>

    <select id="selectByMovieMd5" resultMap="MovieDTOResultMap">
        SELECT
            movie_id,
            movie_name,
            file_type,
            file_size,
            is_merge,
            is_player,
            status,
            channel_id,
            poster,
            movie_md5,
            admin_id,
            movie_shard_total,
            create_time,
            update_time
        FROM
            movie
        WHERE
            movie_md5 = #{movieMd5}
    </select>

    <select id="selectMovieParamById" resultMap="MovieParamResult">
        SELECT
            m.movie_id,
            m.movie_name,
            m.movie_md5,
            m.status,
            m.channel_id,
            m.main_poster,
            m.poster,
            (
                SELECT
                    GROUP_CONCAT(g.genre_id)
                FROM
                    movie_to_genre mgm
                        INNER JOIN genre g ON mgm.genre_id = g.genre_id
                WHERE
                    mgm.movie_id = m.movie_id
            ) AS genre_ids
        FROM
            movie m
        WHERE
            m.movie_id = #{movieId}
    </select>
    <select id="getMovieChannelList" resultType="com.weizi.common.domain.vo.list.MovieVO">
        SELECT
            movie_id,
            movie_name,
            main_poster,
            movie_md5
        FROM
            movie
        WHERE
            is_player = 1
        <if test="channelId != null and channelId != ''">
            AND channel_id = #{channelId}
        </if>
        ORDER BY update_time DESC
        LIMIT #{pageNum}, #{pageSize}
    </select>
</mapper>