import type { FieldValueType, RecordType, PlusColumn } from 'plus-pro-components/es/types';
import type { SetupContext } from 'vue';
export * from './format';
export * from './is';
/**
 * 获取table key
 * @param item
 * @returns
 */
export declare const getTableKey: (item: PlusColumn, hasEditable?: boolean) => string;
/**
 *  获取tooltip
 * @param tooltip
 * @returns
 */
export declare const getTooltip: (tooltip: PlusColumn['tooltip']) => RecordType | undefined;
/**
 * 获取自定义的props 支持对象 函数 和 Promise
 * @param props
 * @param value
 * @param row
 * @returns
 */
export declare const getCustomProps: (props: RecordType | ((...arg: any) => RecordType | Promise<RecordType>) | undefined, value: FieldValueType | undefined, row: RecordType, index: number, type: 'formItemProps' | 'fieldProps') => Promise<any>;
/**
 * 处理slots
 */
export declare const handleSlots: (slots: PlusColumn['slots'], value: FieldValueType | undefined, params: RecordType) => RecordType;
/**
 * 处理slot名称
 */
export declare const getSlotName: (type: string, prop?: string | number) => string;
/**
 * 处理form-item中的slot名称
 */
export declare const getFieldSlotName: (prop?: string | number) => string;
/**
 *   处理form-item中的label slot名称
 */
export declare const getLabelSlotName: (prop?: string | number) => string;
/**
 *   处理form-item中的 extra slot名称
 */
export declare const getExtraSlotName: (prop?: string | number) => string;
/**
 * 处理table中的 header slot名称
 */
export declare const getTableHeaderSlotName: (prop?: string | number) => string;
/**
 * 处理table中的 cell slot名称
 */
export declare const getTableCellSlotName: (prop?: string | number) => string;
/**
 * 处理el-descriptions-item 的  slot名称
 */
export declare const getDescSlotName: (prop?: string | number) => string;
/**
 * 处理el-descriptions-item  label的  slot名称
 */
export declare const getDescLabelSlotName: (prop?: string | number) => string;
/**
 * 过滤slots
 * @param slots
 * @param name
 * @returns
 */
export declare const filterSlots: (slots: RecordType, name: string) => SetupContext['slots'];
/**
 *  获取值  支持 x.y.z
 * @param target
 * @param key
 * @returns
 */
export declare const getValue: (target: RecordType, key: string) => any;
/**
 *  设置值  支持 x.y.z
 * @param target
 * @param key
 * @returns
 */
export declare const setValue: (target: RecordType, key: string, value: any) => RecordType;
