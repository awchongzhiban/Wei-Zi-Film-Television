'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var index = require('../../breadcrumb/index.js');
var index$1 = require('../../sidebar/index.js');
var index$2 = require('../../header/index.js');
require('../../utils/index.js');
var elementPlus = require('element-plus');
var is = require('../../utils/is.js');

var _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...{
    name: "PlusLayout"
  },
  __name: "index",
  props: {
    sidebarProps: { type: null, required: false, default: void 0 },
    headerProps: { type: null, required: false, default: void 0 },
    breadcrumbProps: { type: null, required: false, default: void 0 },
    scrollbarProps: { type: Object, required: false, default: () => ({
      always: true
    }) },
    backtop: { type: [Boolean, Object], required: false, default: true }
  },
  setup(__props, { expose: __expose }) {
    const props = __props;
    const PlusBreadcrumb = index.PlusBreadcrumb;
    const PlusSidebar = index$1.PlusSidebar;
    const PlusHeader = index$2.PlusHeader;
    const plusSidebarInstance = vue.ref();
    const backtopProps = vue.computed(
      () => is.isPlainObject(props.backtop) ? props.backtop : {}
    );
    __expose({
      plusSidebarInstance
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.unref(elementPlus.ElContainer), { class: "plus-layout" }, {
        default: vue.withCtx(() => [
          vue.createCommentVNode(" \u5934\u90E8 "),
          vue.createVNode(
            vue.unref(PlusHeader),
            vue.normalizeProps(vue.guardReactiveProps(_ctx.headerProps)),
            vue.createSlots({
              _: 2
              /* DYNAMIC */
            }, [
              _ctx.$slots["header-left"] ? {
                name: "header-left",
                fn: vue.withCtx((data) => [
                  vue.renderSlot(_ctx.$slots, "header-left", vue.normalizeProps(vue.guardReactiveProps(data)))
                ]),
                key: "0"
              } : void 0,
              _ctx.$slots["header-right"] ? {
                name: "header-right",
                fn: vue.withCtx((data) => [
                  vue.renderSlot(_ctx.$slots, "header-right", vue.normalizeProps(vue.guardReactiveProps(data)))
                ]),
                key: "1"
              } : void 0
            ]),
            1040
            /* FULL_PROPS, DYNAMIC_SLOTS */
          ),
          vue.createVNode(vue.unref(elementPlus.ElContainer), null, {
            default: vue.withCtx(() => [
              vue.createCommentVNode(" \u4FA7\u8FB9\u680F "),
              vue.createVNode(
                vue.unref(PlusSidebar),
                vue.mergeProps(_ctx.sidebarProps, {
                  ref_key: "plusSidebarInstance",
                  ref: plusSidebarInstance
                }),
                vue.createSlots({
                  _: 2
                  /* DYNAMIC */
                }, [
                  _ctx.$slots["sidebar-extra"] ? {
                    name: "sidebar-extra",
                    fn: vue.withCtx((data) => [
                      vue.renderSlot(_ctx.$slots, "sidebar-extra", vue.normalizeProps(vue.guardReactiveProps(data)))
                    ]),
                    key: "0"
                  } : void 0,
                  _ctx.$slots["sidebar-item"] ? {
                    name: "sidebar-item",
                    fn: vue.withCtx((data) => [
                      vue.renderSlot(_ctx.$slots, "sidebar-item", vue.normalizeProps(vue.guardReactiveProps(data)))
                    ]),
                    key: "1"
                  } : void 0,
                  _ctx.$slots["sidebar-sub"] ? {
                    name: "sidebar-sub",
                    fn: vue.withCtx((data) => [
                      vue.renderSlot(_ctx.$slots, "sidebar-sub", vue.normalizeProps(vue.guardReactiveProps(data)))
                    ]),
                    key: "2"
                  } : void 0,
                  _ctx.$slots["sidebar-item-title"] ? {
                    name: "sidebar-item-title",
                    fn: vue.withCtx((data) => [
                      vue.renderSlot(_ctx.$slots, "sidebar-item-title", vue.normalizeProps(vue.guardReactiveProps(data)))
                    ]),
                    key: "3"
                  } : void 0
                ]),
                1040
                /* FULL_PROPS, DYNAMIC_SLOTS */
              ),
              vue.createCommentVNode(" \u4E3B\u5185\u5BB9 "),
              vue.createVNode(vue.unref(elementPlus.ElMain), null, {
                default: vue.withCtx(() => [
                  vue.createVNode(
                    vue.unref(elementPlus.ElScrollbar),
                    vue.mergeProps({ class: "plus-layout-main__scrollbar" }, _ctx.scrollbarProps),
                    {
                      default: vue.withCtx(() => [
                        vue.createCommentVNode(" \u9762\u5305\u5C51\u4E0A\u65B9 "),
                        _ctx.$slots["layout-extra"] ? vue.renderSlot(_ctx.$slots, "layout-extra", { key: 0 }) : vue.createCommentVNode("v-if", true),
                        vue.createCommentVNode(" \u9762\u5305\u5C51 "),
                        vue.createVNode(
                          vue.unref(PlusBreadcrumb),
                          vue.normalizeProps(vue.guardReactiveProps(_ctx.breadcrumbProps)),
                          vue.createSlots({
                            _: 2
                            /* DYNAMIC */
                          }, [
                            _ctx.$slots["breadcrumb-item-title"] ? {
                              name: "breadcrumb-item-title",
                              fn: vue.withCtx((data) => [
                                vue.renderSlot(_ctx.$slots, "breadcrumb-item-title", vue.normalizeProps(vue.guardReactiveProps(data)))
                              ]),
                              key: "0"
                            } : void 0
                          ]),
                          1040
                          /* FULL_PROPS, DYNAMIC_SLOTS */
                        ),
                        vue.renderSlot(_ctx.$slots, "default"),
                        _ctx.backtop ? (vue.openBlock(), vue.createBlock(
                          vue.unref(elementPlus.ElBacktop),
                          vue.mergeProps({ key: 1 }, backtopProps.value, { target: ".plus-layout .plus-layout-main__scrollbar" }),
                          null,
                          16
                          /* FULL_PROPS */
                        )) : vue.createCommentVNode("v-if", true)
                      ]),
                      _: 3
                      /* FORWARDED */
                    },
                    16
                    /* FULL_PROPS */
                  )
                ]),
                _: 3
                /* FORWARDED */
              })
            ]),
            _: 3
            /* FORWARDED */
          })
        ]),
        _: 3
        /* FORWARDED */
      });
    };
  }
});

exports.default = _sfc_main;
