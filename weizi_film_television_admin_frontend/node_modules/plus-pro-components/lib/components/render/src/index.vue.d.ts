import type { PlusColumn, FieldValueType } from 'plus-pro-components/es/types';
export interface PlusRenderProps {
    /**
     * 渲染的类型
     */
    renderType?: 'form';
    /**
     * 回调参数的第一个值
     */
    callbackValue?: FieldValueType;
    customFieldProps?: PlusColumn['fieldProps'] | PlusColumn['formItemProps'];
    render?: PlusColumn['renderField'] | ((...arg: any[]) => void);
    params?: Partial<PlusColumn>;
    handleChange?: (...arg: any[]) => void;
}
export interface PlusRenderEmits {
    (e: 'update:modelValue', data: FieldValueType): void;
    (e: 'change', data: FieldValueType): void;
}
declare const _default: import("vue").DefineComponent<{
    renderType: {
        type: StringConstructor;
        required: false;
        default: undefined;
    };
    callbackValue: {
        type: null;
        required: false;
        default: string;
    };
    customFieldProps: {
        type: null;
        required: false;
        default: () => {};
    };
    render: {
        type: FunctionConstructor;
        required: false;
        skipCheck: boolean;
    };
    params: {
        type: ObjectConstructor;
        required: false;
        default: () => {};
    };
    handleChange: {
        type: FunctionConstructor;
        required: false;
    };
}, {
    props: any;
    state: import("vue").Ref<any>;
    renderComponent: () => any;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    renderType: {
        type: StringConstructor;
        required: false;
        default: undefined;
    };
    callbackValue: {
        type: null;
        required: false;
        default: string;
    };
    customFieldProps: {
        type: null;
        required: false;
        default: () => {};
    };
    render: {
        type: FunctionConstructor;
        required: false;
        skipCheck: boolean;
    };
    params: {
        type: ObjectConstructor;
        required: false;
        default: () => {};
    };
    handleChange: {
        type: FunctionConstructor;
        required: false;
    };
}>>, {
    params: Record<string, any>;
    renderType: string;
    callbackValue: any;
    customFieldProps: any;
}, {}>;
export default _default;
