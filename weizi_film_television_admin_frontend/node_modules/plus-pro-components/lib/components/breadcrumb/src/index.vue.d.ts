import type { VNode } from 'vue';
import type { RouteLocationNormalizedLoaded } from 'vue-router';
import type { PlusRouteRecordRaw } from 'plus-pro-components/es/types';
export interface PlusBreadcrumbProps {
    routes?: PlusRouteRecordRaw[];
    replace?: boolean;
    renderTitle?: (route: PlusRouteRecordRaw) => VNode | string;
}
declare const _default: import("vue").DefineComponent<{
    routes: {
        type: ArrayConstructor;
        required: false;
        default: () => never[];
    };
    replace: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    renderTitle: {
        type: FunctionConstructor;
        required: false;
    };
}, {
    props: any;
    instance: import("vue").ComponentInternalInstance;
    route: import("vue").ComputedRef<RouteLocationNormalizedLoaded>;
    breadcrumbList: import("vue").Ref<{
        components: Record<string, import("vue-router").RouteComponent> | null | undefined;
        path: string;
        redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
            query?: import("vue-router").LocationQueryRaw | undefined;
            hash?: string | undefined;
            path: string;
            replace?: boolean | undefined;
            force?: boolean | undefined;
            state?: import("vue-router").HistoryState | undefined;
        } | {
            query?: import("vue-router").LocationQueryRaw | undefined;
            hash?: string | undefined;
            name?: import("vue-router").RouteRecordName | undefined;
            params?: import("vue-router").RouteParamsRaw | undefined;
            replace?: boolean | undefined;
            force?: boolean | undefined;
            state?: import("vue-router").HistoryState | undefined;
        } | undefined;
        name: import("vue-router").RouteRecordName | undefined;
        children: ({
            component: import("vue").FunctionalComponent<any, any, any> | {
                new (...args: any[]): any;
                __isFragment?: undefined;
                __isTeleport?: undefined;
                __isSuspense?: undefined;
            } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                [x: string]: any;
                setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                    attrs: {
                        [x: string]: unknown;
                    };
                    slots: Readonly<{
                        [name: string]: import("vue").Slot<any> | undefined;
                    }>;
                    emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                    expose: (exposed?: Record<string, any> | undefined) => void;
                }) => any) | undefined;
                name?: string | undefined;
                template?: string | object | undefined;
                render?: Function | undefined;
                components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                inheritAttrs?: boolean | undefined;
                emits?: any;
                slots?: {} | undefined;
                expose?: string[] | undefined;
                serverPrefetch?: (() => void | Promise<any>) | undefined;
                compilerOptions?: {
                    isCustomElement?: ((tag: string) => boolean) | undefined;
                    whitespace?: "preserve" | "condense" | undefined;
                    comments?: boolean | undefined;
                    delimiters?: [string, string] | undefined;
                } | undefined;
                call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                __isFragment?: undefined;
                __isTeleport?: undefined;
                __isSuspense?: undefined;
                __defaults?: any;
                compatConfig?: {
                    GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                    GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                    GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                    GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                    GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                    GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                    GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                    GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                    CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                    CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                    CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                    CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                    CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                    CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                    CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                    INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                    INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                    INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                    INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                    INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                    INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                    INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                    INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                    INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                    OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                    OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                    OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                    OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                    WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                    PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                    V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                    CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                    ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                    ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                    TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                    TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                    COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                    COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                    COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                    RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                    FILTERS?: boolean | "suppress-warning" | undefined;
                    PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                    MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                } | undefined;
                data?: ((this: any, vm: any) => any) | undefined;
                computed?: import("vue").ComputedOptions | undefined;
                methods?: import("vue").MethodOptions | undefined;
                watch?: {
                    [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                        handler: string | import("vue").WatchCallback<any, any>;
                    } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                        handler: string | import("vue").WatchCallback<any, any>;
                    } & import("vue").WatchOptions<boolean>))[];
                } | undefined;
                provide?: import("vue").ComponentProvideOptions | undefined;
                inject?: {} | string[] | undefined;
                filters?: Record<string, Function> | undefined;
                mixins?: any[] | undefined;
                extends?: any;
                beforeCreate?: (() => void) | undefined;
                created?: (() => void) | undefined;
                beforeMount?: (() => void) | undefined;
                mounted?: (() => void) | undefined;
                beforeUpdate?: (() => void) | undefined;
                updated?: (() => void) | undefined;
                activated?: (() => void) | undefined;
                deactivated?: (() => void) | undefined;
                beforeDestroy?: (() => void) | undefined;
                beforeUnmount?: (() => void) | undefined;
                destroyed?: (() => void) | undefined;
                unmounted?: (() => void) | undefined;
                renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                delimiters?: [string, string] | undefined;
                __differentiator?: string | number | symbol | undefined;
                __isBuiltIn?: boolean | undefined;
                __file?: string | undefined;
                __name?: string | undefined;
                beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
            };
            components?: undefined;
            children?: undefined;
            redirect?: undefined;
            props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
            path: string;
            alias?: string | string[] | undefined;
            name?: import("vue-router").RouteRecordName | undefined;
            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
            meta?: import("vue-router").RouteMeta | undefined;
            end?: boolean | undefined;
            sensitive?: boolean | undefined;
            strict?: boolean | undefined;
        } | {
            component?: import("vue").FunctionalComponent<any, any, any> | {
                new (...args: any[]): any;
                __isFragment?: undefined;
                __isTeleport?: undefined;
                __isSuspense?: undefined;
            } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                [x: string]: any;
                setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                    attrs: {
                        [x: string]: unknown;
                    };
                    slots: Readonly<{
                        [name: string]: import("vue").Slot<any> | undefined;
                    }>;
                    emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                    expose: (exposed?: Record<string, any> | undefined) => void;
                }) => any) | undefined;
                name?: string | undefined;
                template?: string | object | undefined;
                render?: Function | undefined;
                components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                inheritAttrs?: boolean | undefined;
                emits?: any;
                slots?: {} | undefined;
                expose?: string[] | undefined;
                serverPrefetch?: (() => void | Promise<any>) | undefined;
                compilerOptions?: {
                    isCustomElement?: ((tag: string) => boolean) | undefined;
                    whitespace?: "preserve" | "condense" | undefined;
                    comments?: boolean | undefined;
                    delimiters?: [string, string] | undefined;
                } | undefined;
                call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                __isFragment?: undefined;
                __isTeleport?: undefined;
                __isSuspense?: undefined;
                __defaults?: any;
                compatConfig?: {
                    GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                    GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                    GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                    GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                    GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                    GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                    GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                    GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                    CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                    CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                    CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                    CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                    CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                    CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                    CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                    INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                    INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                    INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                    INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                    INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                    INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                    INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                    INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                    INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                    OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                    OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                    OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                    OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                    WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                    PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                    V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                    CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                    ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                    ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                    TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                    TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                    COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                    COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                    COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                    RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                    FILTERS?: boolean | "suppress-warning" | undefined;
                    PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                    MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                } | undefined;
                data?: ((this: any, vm: any) => any) | undefined;
                computed?: import("vue").ComputedOptions | undefined;
                methods?: import("vue").MethodOptions | undefined;
                watch?: {
                    [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                        handler: string | import("vue").WatchCallback<any, any>;
                    } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                        handler: string | import("vue").WatchCallback<any, any>;
                    } & import("vue").WatchOptions<boolean>))[];
                } | undefined;
                provide?: import("vue").ComponentProvideOptions | undefined;
                inject?: {} | string[] | undefined;
                filters?: Record<string, Function> | undefined;
                mixins?: any[] | undefined;
                extends?: any;
                beforeCreate?: (() => void) | undefined;
                created?: (() => void) | undefined;
                beforeMount?: (() => void) | undefined;
                mounted?: (() => void) | undefined;
                beforeUpdate?: (() => void) | undefined;
                updated?: (() => void) | undefined;
                activated?: (() => void) | undefined;
                deactivated?: (() => void) | undefined;
                beforeDestroy?: (() => void) | undefined;
                beforeUnmount?: (() => void) | undefined;
                destroyed?: (() => void) | undefined;
                unmounted?: (() => void) | undefined;
                renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                delimiters?: [string, string] | undefined;
                __differentiator?: string | number | symbol | undefined;
                __isBuiltIn?: boolean | undefined;
                __file?: string | undefined;
                __name?: string | undefined;
                beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
            } | null | undefined;
            components?: undefined;
            children: ({
                component: import("vue").FunctionalComponent<any, any, any> | {
                    new (...args: any[]): any;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                    [x: string]: any;
                    setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                        attrs: {
                            [x: string]: unknown;
                        };
                        slots: Readonly<{
                            [name: string]: import("vue").Slot<any> | undefined;
                        }>;
                        emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                        expose: (exposed?: Record<string, any> | undefined) => void;
                    }) => any) | undefined;
                    name?: string | undefined;
                    template?: string | object | undefined;
                    render?: Function | undefined;
                    components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                    directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                    inheritAttrs?: boolean | undefined;
                    emits?: any;
                    slots?: {} | undefined;
                    expose?: string[] | undefined;
                    serverPrefetch?: (() => void | Promise<any>) | undefined;
                    compilerOptions?: {
                        isCustomElement?: ((tag: string) => boolean) | undefined;
                        whitespace?: "preserve" | "condense" | undefined;
                        comments?: boolean | undefined;
                        delimiters?: [string, string] | undefined;
                    } | undefined;
                    call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                    __defaults?: any;
                    compatConfig?: {
                        GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                        GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                        GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                        GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                        CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                        CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                        CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                        CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                        CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                        CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                        CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                        INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                        WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                        PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                        V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                        CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                        ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                        ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                        TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                        TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                        COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                        COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                        COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                        RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                        FILTERS?: boolean | "suppress-warning" | undefined;
                        PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                        MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                    } | undefined;
                    data?: ((this: any, vm: any) => any) | undefined;
                    computed?: import("vue").ComputedOptions | undefined;
                    methods?: import("vue").MethodOptions | undefined;
                    watch?: {
                        [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>))[];
                    } | undefined;
                    provide?: import("vue").ComponentProvideOptions | undefined;
                    inject?: {} | string[] | undefined;
                    filters?: Record<string, Function> | undefined;
                    mixins?: any[] | undefined;
                    extends?: any;
                    beforeCreate?: (() => void) | undefined;
                    created?: (() => void) | undefined;
                    beforeMount?: (() => void) | undefined;
                    mounted?: (() => void) | undefined;
                    beforeUpdate?: (() => void) | undefined;
                    updated?: (() => void) | undefined;
                    activated?: (() => void) | undefined;
                    deactivated?: (() => void) | undefined;
                    beforeDestroy?: (() => void) | undefined;
                    beforeUnmount?: (() => void) | undefined;
                    destroyed?: (() => void) | undefined;
                    unmounted?: (() => void) | undefined;
                    renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                    delimiters?: [string, string] | undefined;
                    __differentiator?: string | number | symbol | undefined;
                    __isBuiltIn?: boolean | undefined;
                    __file?: string | undefined;
                    __name?: string | undefined;
                    beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                    beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                    beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                };
                components?: undefined;
                children?: undefined;
                redirect?: undefined;
                props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | any | {
                components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                component?: undefined;
                children?: undefined;
                redirect?: undefined;
                props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                component?: undefined;
                children: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | {
                    redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    };
                    component?: undefined;
                    components?: undefined;
                    props?: undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    children?: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | any)[] | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                })[];
                props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                path: string;
                redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | undefined;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                };
                component?: undefined;
                components?: undefined;
                props?: undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                children?: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                    component?: undefined;
                    children: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | any)[];
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | undefined;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any)[] | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            })[];
            props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
            path: string;
            redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                query?: import("vue-router").LocationQueryRaw | undefined;
                hash?: string | undefined;
                path: string;
                replace?: boolean | undefined;
                force?: boolean | undefined;
                state?: import("vue-router").HistoryState | undefined;
            } | {
                query?: import("vue-router").LocationQueryRaw | undefined;
                hash?: string | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                params?: import("vue-router").RouteParamsRaw | undefined;
                replace?: boolean | undefined;
                force?: boolean | undefined;
                state?: import("vue-router").HistoryState | undefined;
            } | undefined;
            alias?: string | string[] | undefined;
            name?: import("vue-router").RouteRecordName | undefined;
            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
            meta?: import("vue-router").RouteMeta | undefined;
            end?: boolean | undefined;
            sensitive?: boolean | undefined;
            strict?: boolean | undefined;
        } | {
            components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
            component?: undefined;
            children?: undefined;
            redirect?: undefined;
            props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
            path: string;
            alias?: string | string[] | undefined;
            name?: import("vue-router").RouteRecordName | undefined;
            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
            meta?: import("vue-router").RouteMeta | undefined;
            end?: boolean | undefined;
            sensitive?: boolean | undefined;
            strict?: boolean | undefined;
        } | {
            components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
            component?: undefined;
            children: ({
                component: import("vue").FunctionalComponent<any, any, any> | {
                    new (...args: any[]): any;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                    [x: string]: any;
                    setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                        attrs: {
                            [x: string]: unknown;
                        };
                        slots: Readonly<{
                            [name: string]: import("vue").Slot<any> | undefined;
                        }>;
                        emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                        expose: (exposed?: Record<string, any> | undefined) => void;
                    }) => any) | undefined;
                    name?: string | undefined;
                    template?: string | object | undefined;
                    render?: Function | undefined;
                    components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                    directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                    inheritAttrs?: boolean | undefined;
                    emits?: any;
                    slots?: {} | undefined;
                    expose?: string[] | undefined;
                    serverPrefetch?: (() => void | Promise<any>) | undefined;
                    compilerOptions?: {
                        isCustomElement?: ((tag: string) => boolean) | undefined;
                        whitespace?: "preserve" | "condense" | undefined;
                        comments?: boolean | undefined;
                        delimiters?: [string, string] | undefined;
                    } | undefined;
                    call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                    __defaults?: any;
                    compatConfig?: {
                        GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                        GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                        GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                        GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                        CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                        CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                        CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                        CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                        CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                        CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                        CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                        INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                        WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                        PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                        V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                        CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                        ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                        ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                        TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                        TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                        COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                        COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                        COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                        RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                        FILTERS?: boolean | "suppress-warning" | undefined;
                        PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                        MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                    } | undefined;
                    data?: ((this: any, vm: any) => any) | undefined;
                    computed?: import("vue").ComputedOptions | undefined;
                    methods?: import("vue").MethodOptions | undefined;
                    watch?: {
                        [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>))[];
                    } | undefined;
                    provide?: import("vue").ComponentProvideOptions | undefined;
                    inject?: {} | string[] | undefined;
                    filters?: Record<string, Function> | undefined;
                    mixins?: any[] | undefined;
                    extends?: any;
                    beforeCreate?: (() => void) | undefined;
                    created?: (() => void) | undefined;
                    beforeMount?: (() => void) | undefined;
                    mounted?: (() => void) | undefined;
                    beforeUpdate?: (() => void) | undefined;
                    updated?: (() => void) | undefined;
                    activated?: (() => void) | undefined;
                    deactivated?: (() => void) | undefined;
                    beforeDestroy?: (() => void) | undefined;
                    beforeUnmount?: (() => void) | undefined;
                    destroyed?: (() => void) | undefined;
                    unmounted?: (() => void) | undefined;
                    renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                    delimiters?: [string, string] | undefined;
                    __differentiator?: string | number | symbol | undefined;
                    __isBuiltIn?: boolean | undefined;
                    __file?: string | undefined;
                    __name?: string | undefined;
                    beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                    beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                    beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                };
                components?: undefined;
                children?: undefined;
                redirect?: undefined;
                props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                component?: import("vue").FunctionalComponent<any, any, any> | {
                    new (...args: any[]): any;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                    [x: string]: any;
                    setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                        attrs: {
                            [x: string]: unknown;
                        };
                        slots: Readonly<{
                            [name: string]: import("vue").Slot<any> | undefined;
                        }>;
                        emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                        expose: (exposed?: Record<string, any> | undefined) => void;
                    }) => any) | undefined;
                    name?: string | undefined;
                    template?: string | object | undefined;
                    render?: Function | undefined;
                    components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                    directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                    inheritAttrs?: boolean | undefined;
                    emits?: any;
                    slots?: {} | undefined;
                    expose?: string[] | undefined;
                    serverPrefetch?: (() => void | Promise<any>) | undefined;
                    compilerOptions?: {
                        isCustomElement?: ((tag: string) => boolean) | undefined;
                        whitespace?: "preserve" | "condense" | undefined;
                        comments?: boolean | undefined;
                        delimiters?: [string, string] | undefined;
                    } | undefined;
                    call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                    __defaults?: any;
                    compatConfig?: {
                        GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                        GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                        GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                        GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                        CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                        CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                        CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                        CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                        CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                        CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                        CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                        INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                        WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                        PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                        V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                        CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                        ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                        ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                        TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                        TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                        COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                        COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                        COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                        RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                        FILTERS?: boolean | "suppress-warning" | undefined;
                        PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                        MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                    } | undefined;
                    data?: ((this: any, vm: any) => any) | undefined;
                    computed?: import("vue").ComputedOptions | undefined;
                    methods?: import("vue").MethodOptions | undefined;
                    watch?: {
                        [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>))[];
                    } | undefined;
                    provide?: import("vue").ComponentProvideOptions | undefined;
                    inject?: {} | string[] | undefined;
                    filters?: Record<string, Function> | undefined;
                    mixins?: any[] | undefined;
                    extends?: any;
                    beforeCreate?: (() => void) | undefined;
                    created?: (() => void) | undefined;
                    beforeMount?: (() => void) | undefined;
                    mounted?: (() => void) | undefined;
                    beforeUpdate?: (() => void) | undefined;
                    updated?: (() => void) | undefined;
                    activated?: (() => void) | undefined;
                    deactivated?: (() => void) | undefined;
                    beforeDestroy?: (() => void) | undefined;
                    beforeUnmount?: (() => void) | undefined;
                    destroyed?: (() => void) | undefined;
                    unmounted?: (() => void) | undefined;
                    renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                    delimiters?: [string, string] | undefined;
                    __differentiator?: string | number | symbol | undefined;
                    __isBuiltIn?: boolean | undefined;
                    __file?: string | undefined;
                    __name?: string | undefined;
                    beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                    beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                    beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                } | null | undefined;
                components?: undefined;
                children: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | {
                    redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    };
                    component?: undefined;
                    components?: undefined;
                    props?: undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    children?: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | any)[] | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                })[];
                props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                path: string;
                redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | undefined;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                component?: undefined;
                children?: undefined;
                redirect?: undefined;
                props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | any | {
                redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                };
                component?: undefined;
                components?: undefined;
                props?: undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                children?: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    component?: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    } | null | undefined;
                    components?: undefined;
                    children: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | any)[];
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | undefined;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | any)[] | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            })[];
            props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
            path: string;
            redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                query?: import("vue-router").LocationQueryRaw | undefined;
                hash?: string | undefined;
                path: string;
                replace?: boolean | undefined;
                force?: boolean | undefined;
                state?: import("vue-router").HistoryState | undefined;
            } | {
                query?: import("vue-router").LocationQueryRaw | undefined;
                hash?: string | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                params?: import("vue-router").RouteParamsRaw | undefined;
                replace?: boolean | undefined;
                force?: boolean | undefined;
                state?: import("vue-router").HistoryState | undefined;
            } | undefined;
            alias?: string | string[] | undefined;
            name?: import("vue-router").RouteRecordName | undefined;
            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
            meta?: import("vue-router").RouteMeta | undefined;
            end?: boolean | undefined;
            sensitive?: boolean | undefined;
            strict?: boolean | undefined;
        } | {
            redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                query?: import("vue-router").LocationQueryRaw | undefined;
                hash?: string | undefined;
                path: string;
                replace?: boolean | undefined;
                force?: boolean | undefined;
                state?: import("vue-router").HistoryState | undefined;
            } | {
                query?: import("vue-router").LocationQueryRaw | undefined;
                hash?: string | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                params?: import("vue-router").RouteParamsRaw | undefined;
                replace?: boolean | undefined;
                force?: boolean | undefined;
                state?: import("vue-router").HistoryState | undefined;
            };
            component?: undefined;
            components?: undefined;
            props?: undefined;
            path: string;
            alias?: string | string[] | undefined;
            name?: import("vue-router").RouteRecordName | undefined;
            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
            meta?: import("vue-router").RouteMeta | undefined;
            children?: ({
                component: import("vue").FunctionalComponent<any, any, any> | {
                    new (...args: any[]): any;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                    [x: string]: any;
                    setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                        attrs: {
                            [x: string]: unknown;
                        };
                        slots: Readonly<{
                            [name: string]: import("vue").Slot<any> | undefined;
                        }>;
                        emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                        expose: (exposed?: Record<string, any> | undefined) => void;
                    }) => any) | undefined;
                    name?: string | undefined;
                    template?: string | object | undefined;
                    render?: Function | undefined;
                    components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                    directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                    inheritAttrs?: boolean | undefined;
                    emits?: any;
                    slots?: {} | undefined;
                    expose?: string[] | undefined;
                    serverPrefetch?: (() => void | Promise<any>) | undefined;
                    compilerOptions?: {
                        isCustomElement?: ((tag: string) => boolean) | undefined;
                        whitespace?: "preserve" | "condense" | undefined;
                        comments?: boolean | undefined;
                        delimiters?: [string, string] | undefined;
                    } | undefined;
                    call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                    __defaults?: any;
                    compatConfig?: {
                        GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                        GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                        GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                        GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                        CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                        CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                        CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                        CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                        CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                        CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                        CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                        INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                        WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                        PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                        V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                        CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                        ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                        ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                        TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                        TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                        COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                        COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                        COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                        RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                        FILTERS?: boolean | "suppress-warning" | undefined;
                        PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                        MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                    } | undefined;
                    data?: ((this: any, vm: any) => any) | undefined;
                    computed?: import("vue").ComputedOptions | undefined;
                    methods?: import("vue").MethodOptions | undefined;
                    watch?: {
                        [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>))[];
                    } | undefined;
                    provide?: import("vue").ComponentProvideOptions | undefined;
                    inject?: {} | string[] | undefined;
                    filters?: Record<string, Function> | undefined;
                    mixins?: any[] | undefined;
                    extends?: any;
                    beforeCreate?: (() => void) | undefined;
                    created?: (() => void) | undefined;
                    beforeMount?: (() => void) | undefined;
                    mounted?: (() => void) | undefined;
                    beforeUpdate?: (() => void) | undefined;
                    updated?: (() => void) | undefined;
                    activated?: (() => void) | undefined;
                    deactivated?: (() => void) | undefined;
                    beforeDestroy?: (() => void) | undefined;
                    beforeUnmount?: (() => void) | undefined;
                    destroyed?: (() => void) | undefined;
                    unmounted?: (() => void) | undefined;
                    renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                    delimiters?: [string, string] | undefined;
                    __differentiator?: string | number | symbol | undefined;
                    __isBuiltIn?: boolean | undefined;
                    __file?: string | undefined;
                    __name?: string | undefined;
                    beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                    beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                    beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                };
                components?: undefined;
                children?: undefined;
                redirect?: undefined;
                props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                component?: import("vue").FunctionalComponent<any, any, any> | {
                    new (...args: any[]): any;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                    [x: string]: any;
                    setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                        attrs: {
                            [x: string]: unknown;
                        };
                        slots: Readonly<{
                            [name: string]: import("vue").Slot<any> | undefined;
                        }>;
                        emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                        expose: (exposed?: Record<string, any> | undefined) => void;
                    }) => any) | undefined;
                    name?: string | undefined;
                    template?: string | object | undefined;
                    render?: Function | undefined;
                    components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                    directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                    inheritAttrs?: boolean | undefined;
                    emits?: any;
                    slots?: {} | undefined;
                    expose?: string[] | undefined;
                    serverPrefetch?: (() => void | Promise<any>) | undefined;
                    compilerOptions?: {
                        isCustomElement?: ((tag: string) => boolean) | undefined;
                        whitespace?: "preserve" | "condense" | undefined;
                        comments?: boolean | undefined;
                        delimiters?: [string, string] | undefined;
                    } | undefined;
                    call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                    __defaults?: any;
                    compatConfig?: {
                        GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                        GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                        GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                        GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                        CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                        CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                        CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                        CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                        CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                        CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                        CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                        INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                        WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                        PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                        V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                        CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                        ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                        ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                        TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                        TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                        COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                        COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                        COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                        RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                        FILTERS?: boolean | "suppress-warning" | undefined;
                        PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                        MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                    } | undefined;
                    data?: ((this: any, vm: any) => any) | undefined;
                    computed?: import("vue").ComputedOptions | undefined;
                    methods?: import("vue").MethodOptions | undefined;
                    watch?: {
                        [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>))[];
                    } | undefined;
                    provide?: import("vue").ComponentProvideOptions | undefined;
                    inject?: {} | string[] | undefined;
                    filters?: Record<string, Function> | undefined;
                    mixins?: any[] | undefined;
                    extends?: any;
                    beforeCreate?: (() => void) | undefined;
                    created?: (() => void) | undefined;
                    beforeMount?: (() => void) | undefined;
                    mounted?: (() => void) | undefined;
                    beforeUpdate?: (() => void) | undefined;
                    updated?: (() => void) | undefined;
                    activated?: (() => void) | undefined;
                    deactivated?: (() => void) | undefined;
                    beforeDestroy?: (() => void) | undefined;
                    beforeUnmount?: (() => void) | undefined;
                    destroyed?: (() => void) | undefined;
                    unmounted?: (() => void) | undefined;
                    renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                    delimiters?: [string, string] | undefined;
                    __differentiator?: string | number | symbol | undefined;
                    __isBuiltIn?: boolean | undefined;
                    __file?: string | undefined;
                    __name?: string | undefined;
                    beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                    beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                    beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                } | null | undefined;
                components?: undefined;
                children: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                    component?: undefined;
                    children: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | any)[];
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | undefined;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any)[];
                props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                path: string;
                redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | undefined;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                component?: undefined;
                children?: undefined;
                redirect?: undefined;
                props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                component?: undefined;
                children: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    component?: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    } | null | undefined;
                    components?: undefined;
                    children: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | any)[];
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | undefined;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | any)[];
                props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                path: string;
                redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | undefined;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | any)[] | undefined;
            end?: boolean | undefined;
            sensitive?: boolean | undefined;
            strict?: boolean | undefined;
        })[];
        meta: import("vue-router").RouteMeta;
        props: Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)>;
        beforeEnter: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
        leaveGuards: Set<import("vue-router").NavigationGuard>;
        updateGuards: Set<import("vue-router").NavigationGuard>;
        enterCallbacks: Record<string, ((vm: import("vue").ComponentPublicInstance) => any)[]>;
        instances: Record<string, import("vue").ComponentPublicInstance | null | undefined>;
        aliasOf: {
            path: string;
            redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                query?: import("vue-router").LocationQueryRaw | undefined;
                hash?: string | undefined;
                path: string;
                replace?: boolean | undefined;
                force?: boolean | undefined;
                state?: import("vue-router").HistoryState | undefined;
            } | {
                query?: import("vue-router").LocationQueryRaw | undefined;
                hash?: string | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                params?: import("vue-router").RouteParamsRaw | undefined;
                replace?: boolean | undefined;
                force?: boolean | undefined;
                state?: import("vue-router").HistoryState | undefined;
            } | undefined;
            name: import("vue-router").RouteRecordName | undefined;
            components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
            children: ({
                component: import("vue").FunctionalComponent<any, any, any> | {
                    new (...args: any[]): any;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                    [x: string]: any;
                    setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                        attrs: {
                            [x: string]: unknown;
                        };
                        slots: Readonly<{
                            [name: string]: import("vue").Slot<any> | undefined;
                        }>;
                        emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                        expose: (exposed?: Record<string, any> | undefined) => void;
                    }) => any) | undefined;
                    name?: string | undefined;
                    template?: string | object | undefined;
                    render?: Function | undefined;
                    components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                    directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                    inheritAttrs?: boolean | undefined;
                    emits?: any;
                    slots?: {} | undefined;
                    expose?: string[] | undefined;
                    serverPrefetch?: (() => void | Promise<any>) | undefined;
                    compilerOptions?: {
                        isCustomElement?: ((tag: string) => boolean) | undefined;
                        whitespace?: "preserve" | "condense" | undefined;
                        comments?: boolean | undefined;
                        delimiters?: [string, string] | undefined;
                    } | undefined;
                    call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                    __defaults?: any;
                    compatConfig?: {
                        GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                        GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                        GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                        GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                        CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                        CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                        CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                        CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                        CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                        CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                        CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                        INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                        WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                        PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                        V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                        CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                        ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                        ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                        TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                        TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                        COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                        COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                        COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                        RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                        FILTERS?: boolean | "suppress-warning" | undefined;
                        PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                        MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                    } | undefined;
                    data?: ((this: any, vm: any) => any) | undefined;
                    computed?: import("vue").ComputedOptions | undefined;
                    methods?: import("vue").MethodOptions | undefined;
                    watch?: {
                        [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>))[];
                    } | undefined;
                    provide?: import("vue").ComponentProvideOptions | undefined;
                    inject?: {} | string[] | undefined;
                    filters?: Record<string, Function> | undefined;
                    mixins?: any[] | undefined;
                    extends?: any;
                    beforeCreate?: (() => void) | undefined;
                    created?: (() => void) | undefined;
                    beforeMount?: (() => void) | undefined;
                    mounted?: (() => void) | undefined;
                    beforeUpdate?: (() => void) | undefined;
                    updated?: (() => void) | undefined;
                    activated?: (() => void) | undefined;
                    deactivated?: (() => void) | undefined;
                    beforeDestroy?: (() => void) | undefined;
                    beforeUnmount?: (() => void) | undefined;
                    destroyed?: (() => void) | undefined;
                    unmounted?: (() => void) | undefined;
                    renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                    delimiters?: [string, string] | undefined;
                    __differentiator?: string | number | symbol | undefined;
                    __isBuiltIn?: boolean | undefined;
                    __file?: string | undefined;
                    __name?: string | undefined;
                    beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                    beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                    beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                };
                components?: undefined;
                children?: undefined;
                redirect?: undefined;
                props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                component?: import("vue").FunctionalComponent<any, any, any> | {
                    new (...args: any[]): any;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                    [x: string]: any;
                    setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                        attrs: {
                            [x: string]: unknown;
                        };
                        slots: Readonly<{
                            [name: string]: import("vue").Slot<any> | undefined;
                        }>;
                        emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                        expose: (exposed?: Record<string, any> | undefined) => void;
                    }) => any) | undefined;
                    name?: string | undefined;
                    template?: string | object | undefined;
                    render?: Function | undefined;
                    components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                    directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                    inheritAttrs?: boolean | undefined;
                    emits?: any;
                    slots?: {} | undefined;
                    expose?: string[] | undefined;
                    serverPrefetch?: (() => void | Promise<any>) | undefined;
                    compilerOptions?: {
                        isCustomElement?: ((tag: string) => boolean) | undefined;
                        whitespace?: "preserve" | "condense" | undefined;
                        comments?: boolean | undefined;
                        delimiters?: [string, string] | undefined;
                    } | undefined;
                    call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                    __isFragment?: undefined;
                    __isTeleport?: undefined;
                    __isSuspense?: undefined;
                    __defaults?: any;
                    compatConfig?: {
                        GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                        GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                        GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                        GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                        GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                        CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                        CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                        CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                        CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                        CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                        CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                        CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                        INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                        INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                        INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                        INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                        OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                        OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                        WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                        PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                        V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                        CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                        ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                        ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                        TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                        TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                        COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                        COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                        COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                        RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                        FILTERS?: boolean | "suppress-warning" | undefined;
                        PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                        MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                    } | undefined;
                    data?: ((this: any, vm: any) => any) | undefined;
                    computed?: import("vue").ComputedOptions | undefined;
                    methods?: import("vue").MethodOptions | undefined;
                    watch?: {
                        [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                            handler: string | import("vue").WatchCallback<any, any>;
                        } & import("vue").WatchOptions<boolean>))[];
                    } | undefined;
                    provide?: import("vue").ComponentProvideOptions | undefined;
                    inject?: {} | string[] | undefined;
                    filters?: Record<string, Function> | undefined;
                    mixins?: any[] | undefined;
                    extends?: any;
                    beforeCreate?: (() => void) | undefined;
                    created?: (() => void) | undefined;
                    beforeMount?: (() => void) | undefined;
                    mounted?: (() => void) | undefined;
                    beforeUpdate?: (() => void) | undefined;
                    updated?: (() => void) | undefined;
                    activated?: (() => void) | undefined;
                    deactivated?: (() => void) | undefined;
                    beforeDestroy?: (() => void) | undefined;
                    beforeUnmount?: (() => void) | undefined;
                    destroyed?: (() => void) | undefined;
                    unmounted?: (() => void) | undefined;
                    renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                    errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                    delimiters?: [string, string] | undefined;
                    __differentiator?: string | number | symbol | undefined;
                    __isBuiltIn?: boolean | undefined;
                    __file?: string | undefined;
                    __name?: string | undefined;
                    beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                    beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                    beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                } | null | undefined;
                components?: undefined;
                children: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                    component?: undefined;
                    children: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            path: string;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            params?: import("vue-router").RouteParamsRaw | undefined;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        };
                        component?: undefined;
                        components?: undefined;
                        props?: undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        children?: ({
                            component: import("vue").FunctionalComponent<any, any, any> | {
                                new (...args: any[]): any;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                            } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                                [x: string]: any;
                                setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                    attrs: {
                                        [x: string]: unknown;
                                    };
                                    slots: Readonly<{
                                        [name: string]: import("vue").Slot<any> | undefined;
                                    }>;
                                    emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                    expose: (exposed?: Record<string, any> | undefined) => void;
                                }) => any) | undefined;
                                name?: string | undefined;
                                template?: string | object | undefined;
                                render?: Function | undefined;
                                components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                                directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                                inheritAttrs?: boolean | undefined;
                                emits?: any;
                                slots?: {} | undefined;
                                expose?: string[] | undefined;
                                serverPrefetch?: (() => void | Promise<any>) | undefined;
                                compilerOptions?: {
                                    isCustomElement?: ((tag: string) => boolean) | undefined;
                                    whitespace?: "preserve" | "condense" | undefined;
                                    comments?: boolean | undefined;
                                    delimiters?: [string, string] | undefined;
                                } | undefined;
                                call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                                __defaults?: any;
                                compatConfig?: {
                                    GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                    CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                    CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                    CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                    CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                    CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                    WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                    PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                    V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                    CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                    ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                    ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                    RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                    FILTERS?: boolean | "suppress-warning" | undefined;
                                    PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                    MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                                } | undefined;
                                data?: ((this: any, vm: any) => any) | undefined;
                                computed?: import("vue").ComputedOptions | undefined;
                                methods?: import("vue").MethodOptions | undefined;
                                watch?: {
                                    [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>))[];
                                } | undefined;
                                provide?: import("vue").ComponentProvideOptions | undefined;
                                inject?: {} | string[] | undefined;
                                filters?: Record<string, Function> | undefined;
                                mixins?: any[] | undefined;
                                extends?: any;
                                beforeCreate?: (() => void) | undefined;
                                created?: (() => void) | undefined;
                                beforeMount?: (() => void) | undefined;
                                mounted?: (() => void) | undefined;
                                beforeUpdate?: (() => void) | undefined;
                                updated?: (() => void) | undefined;
                                activated?: (() => void) | undefined;
                                deactivated?: (() => void) | undefined;
                                beforeDestroy?: (() => void) | undefined;
                                beforeUnmount?: (() => void) | undefined;
                                destroyed?: (() => void) | undefined;
                                unmounted?: (() => void) | undefined;
                                renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                                delimiters?: [string, string] | undefined;
                                __differentiator?: string | number | symbol | undefined;
                                __isBuiltIn?: boolean | undefined;
                                __file?: string | undefined;
                                __name?: string | undefined;
                                beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                                beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                                beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                            };
                            components?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | {
                            components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                            component?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | any)[] | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    })[];
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | undefined;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    };
                    component?: undefined;
                    components?: undefined;
                    props?: undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    children?: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | {
                        components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                        component?: undefined;
                        children: ({
                            component: import("vue").FunctionalComponent<any, any, any> | {
                                new (...args: any[]): any;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                            } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                                [x: string]: any;
                                setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                    attrs: {
                                        [x: string]: unknown;
                                    };
                                    slots: Readonly<{
                                        [name: string]: import("vue").Slot<any> | undefined;
                                    }>;
                                    emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                    expose: (exposed?: Record<string, any> | undefined) => void;
                                }) => any) | undefined;
                                name?: string | undefined;
                                template?: string | object | undefined;
                                render?: Function | undefined;
                                components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                                directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                                inheritAttrs?: boolean | undefined;
                                emits?: any;
                                slots?: {} | undefined;
                                expose?: string[] | undefined;
                                serverPrefetch?: (() => void | Promise<any>) | undefined;
                                compilerOptions?: {
                                    isCustomElement?: ((tag: string) => boolean) | undefined;
                                    whitespace?: "preserve" | "condense" | undefined;
                                    comments?: boolean | undefined;
                                    delimiters?: [string, string] | undefined;
                                } | undefined;
                                call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                                __defaults?: any;
                                compatConfig?: {
                                    GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                    CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                    CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                    CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                    CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                    CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                    WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                    PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                    V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                    CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                    ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                    ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                    RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                    FILTERS?: boolean | "suppress-warning" | undefined;
                                    PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                    MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                                } | undefined;
                                data?: ((this: any, vm: any) => any) | undefined;
                                computed?: import("vue").ComputedOptions | undefined;
                                methods?: import("vue").MethodOptions | undefined;
                                watch?: {
                                    [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>))[];
                                } | undefined;
                                provide?: import("vue").ComponentProvideOptions | undefined;
                                inject?: {} | string[] | undefined;
                                filters?: Record<string, Function> | undefined;
                                mixins?: any[] | undefined;
                                extends?: any;
                                beforeCreate?: (() => void) | undefined;
                                created?: (() => void) | undefined;
                                beforeMount?: (() => void) | undefined;
                                mounted?: (() => void) | undefined;
                                beforeUpdate?: (() => void) | undefined;
                                updated?: (() => void) | undefined;
                                activated?: (() => void) | undefined;
                                deactivated?: (() => void) | undefined;
                                beforeDestroy?: (() => void) | undefined;
                                beforeUnmount?: (() => void) | undefined;
                                destroyed?: (() => void) | undefined;
                                unmounted?: (() => void) | undefined;
                                renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                                delimiters?: [string, string] | undefined;
                                __differentiator?: string | number | symbol | undefined;
                                __isBuiltIn?: boolean | undefined;
                                __file?: string | undefined;
                                __name?: string | undefined;
                                beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                                beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                                beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                            };
                            components?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | {
                            components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                            component?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | any)[];
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            path: string;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            params?: import("vue-router").RouteParamsRaw | undefined;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | undefined;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any)[] | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                })[];
                props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                path: string;
                redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | undefined;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                component?: undefined;
                children?: undefined;
                redirect?: undefined;
                props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                component?: undefined;
                children: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    component?: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    } | null | undefined;
                    components?: undefined;
                    children: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            path: string;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            params?: import("vue-router").RouteParamsRaw | undefined;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        };
                        component?: undefined;
                        components?: undefined;
                        props?: undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        children?: ({
                            component: import("vue").FunctionalComponent<any, any, any> | {
                                new (...args: any[]): any;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                            } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                                [x: string]: any;
                                setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                    attrs: {
                                        [x: string]: unknown;
                                    };
                                    slots: Readonly<{
                                        [name: string]: import("vue").Slot<any> | undefined;
                                    }>;
                                    emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                    expose: (exposed?: Record<string, any> | undefined) => void;
                                }) => any) | undefined;
                                name?: string | undefined;
                                template?: string | object | undefined;
                                render?: Function | undefined;
                                components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                                directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                                inheritAttrs?: boolean | undefined;
                                emits?: any;
                                slots?: {} | undefined;
                                expose?: string[] | undefined;
                                serverPrefetch?: (() => void | Promise<any>) | undefined;
                                compilerOptions?: {
                                    isCustomElement?: ((tag: string) => boolean) | undefined;
                                    whitespace?: "preserve" | "condense" | undefined;
                                    comments?: boolean | undefined;
                                    delimiters?: [string, string] | undefined;
                                } | undefined;
                                call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                                __defaults?: any;
                                compatConfig?: {
                                    GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                    CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                    CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                    CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                    CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                    CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                    WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                    PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                    V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                    CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                    ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                    ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                    RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                    FILTERS?: boolean | "suppress-warning" | undefined;
                                    PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                    MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                                } | undefined;
                                data?: ((this: any, vm: any) => any) | undefined;
                                computed?: import("vue").ComputedOptions | undefined;
                                methods?: import("vue").MethodOptions | undefined;
                                watch?: {
                                    [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>))[];
                                } | undefined;
                                provide?: import("vue").ComponentProvideOptions | undefined;
                                inject?: {} | string[] | undefined;
                                filters?: Record<string, Function> | undefined;
                                mixins?: any[] | undefined;
                                extends?: any;
                                beforeCreate?: (() => void) | undefined;
                                created?: (() => void) | undefined;
                                beforeMount?: (() => void) | undefined;
                                mounted?: (() => void) | undefined;
                                beforeUpdate?: (() => void) | undefined;
                                updated?: (() => void) | undefined;
                                activated?: (() => void) | undefined;
                                deactivated?: (() => void) | undefined;
                                beforeDestroy?: (() => void) | undefined;
                                beforeUnmount?: (() => void) | undefined;
                                destroyed?: (() => void) | undefined;
                                unmounted?: (() => void) | undefined;
                                renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                                delimiters?: [string, string] | undefined;
                                __differentiator?: string | number | symbol | undefined;
                                __isBuiltIn?: boolean | undefined;
                                __file?: string | undefined;
                                __name?: string | undefined;
                                beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                                beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                                beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                            };
                            components?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | {
                            components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                            component?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | any)[] | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    })[];
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | undefined;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any | {
                    redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    };
                    component?: undefined;
                    components?: undefined;
                    props?: undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    children?: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | {
                        component?: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        } | null | undefined;
                        components?: undefined;
                        children: ({
                            component: import("vue").FunctionalComponent<any, any, any> | {
                                new (...args: any[]): any;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                            } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                                [x: string]: any;
                                setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                    attrs: {
                                        [x: string]: unknown;
                                    };
                                    slots: Readonly<{
                                        [name: string]: import("vue").Slot<any> | undefined;
                                    }>;
                                    emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                    expose: (exposed?: Record<string, any> | undefined) => void;
                                }) => any) | undefined;
                                name?: string | undefined;
                                template?: string | object | undefined;
                                render?: Function | undefined;
                                components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                                directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                                inheritAttrs?: boolean | undefined;
                                emits?: any;
                                slots?: {} | undefined;
                                expose?: string[] | undefined;
                                serverPrefetch?: (() => void | Promise<any>) | undefined;
                                compilerOptions?: {
                                    isCustomElement?: ((tag: string) => boolean) | undefined;
                                    whitespace?: "preserve" | "condense" | undefined;
                                    comments?: boolean | undefined;
                                    delimiters?: [string, string] | undefined;
                                } | undefined;
                                call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                                __defaults?: any;
                                compatConfig?: {
                                    GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                    CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                    CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                    CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                    CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                    CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                    WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                    PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                    V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                    CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                    ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                    ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                    RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                    FILTERS?: boolean | "suppress-warning" | undefined;
                                    PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                    MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                                } | undefined;
                                data?: ((this: any, vm: any) => any) | undefined;
                                computed?: import("vue").ComputedOptions | undefined;
                                methods?: import("vue").MethodOptions | undefined;
                                watch?: {
                                    [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>))[];
                                } | undefined;
                                provide?: import("vue").ComponentProvideOptions | undefined;
                                inject?: {} | string[] | undefined;
                                filters?: Record<string, Function> | undefined;
                                mixins?: any[] | undefined;
                                extends?: any;
                                beforeCreate?: (() => void) | undefined;
                                created?: (() => void) | undefined;
                                beforeMount?: (() => void) | undefined;
                                mounted?: (() => void) | undefined;
                                beforeUpdate?: (() => void) | undefined;
                                updated?: (() => void) | undefined;
                                activated?: (() => void) | undefined;
                                deactivated?: (() => void) | undefined;
                                beforeDestroy?: (() => void) | undefined;
                                beforeUnmount?: (() => void) | undefined;
                                destroyed?: (() => void) | undefined;
                                unmounted?: (() => void) | undefined;
                                renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                                delimiters?: [string, string] | undefined;
                                __differentiator?: string | number | symbol | undefined;
                                __isBuiltIn?: boolean | undefined;
                                __file?: string | undefined;
                                __name?: string | undefined;
                                beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                                beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                                beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                            };
                            components?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | {
                            components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                            component?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | any)[];
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            path: string;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            params?: import("vue-router").RouteParamsRaw | undefined;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | undefined;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | any)[] | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                })[];
                props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                path: string;
                redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | undefined;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            } | {
                redirect: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    path: string;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                } | {
                    query?: import("vue-router").LocationQueryRaw | undefined;
                    hash?: string | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    params?: import("vue-router").RouteParamsRaw | undefined;
                    replace?: boolean | undefined;
                    force?: boolean | undefined;
                    state?: import("vue-router").HistoryState | undefined;
                };
                component?: undefined;
                components?: undefined;
                props?: undefined;
                path: string;
                alias?: string | string[] | undefined;
                name?: import("vue-router").RouteRecordName | undefined;
                beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                meta?: import("vue-router").RouteMeta | undefined;
                children?: ({
                    component: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    };
                    components?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    component?: import("vue").FunctionalComponent<any, any, any> | {
                        new (...args: any[]): any;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                    } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                        [x: string]: any;
                        setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                            attrs: {
                                [x: string]: unknown;
                            };
                            slots: Readonly<{
                                [name: string]: import("vue").Slot<any> | undefined;
                            }>;
                            emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                            expose: (exposed?: Record<string, any> | undefined) => void;
                        }) => any) | undefined;
                        name?: string | undefined;
                        template?: string | object | undefined;
                        render?: Function | undefined;
                        components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                        directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                        inheritAttrs?: boolean | undefined;
                        emits?: any;
                        slots?: {} | undefined;
                        expose?: string[] | undefined;
                        serverPrefetch?: (() => void | Promise<any>) | undefined;
                        compilerOptions?: {
                            isCustomElement?: ((tag: string) => boolean) | undefined;
                            whitespace?: "preserve" | "condense" | undefined;
                            comments?: boolean | undefined;
                            delimiters?: [string, string] | undefined;
                        } | undefined;
                        call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                        __isFragment?: undefined;
                        __isTeleport?: undefined;
                        __isSuspense?: undefined;
                        __defaults?: any;
                        compatConfig?: {
                            GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                            GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                            GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                            GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                            GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                            CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                            CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                            CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                            CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                            CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                            CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                            CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                            INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                            INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                            INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                            INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                            OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                            OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                            WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                            PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                            V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                            CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                            ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                            ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                            TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                            TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                            COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                            COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                            COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                            RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                            FILTERS?: boolean | "suppress-warning" | undefined;
                            PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                            MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                        } | undefined;
                        data?: ((this: any, vm: any) => any) | undefined;
                        computed?: import("vue").ComputedOptions | undefined;
                        methods?: import("vue").MethodOptions | undefined;
                        watch?: {
                            [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                handler: string | import("vue").WatchCallback<any, any>;
                            } & import("vue").WatchOptions<boolean>))[];
                        } | undefined;
                        provide?: import("vue").ComponentProvideOptions | undefined;
                        inject?: {} | string[] | undefined;
                        filters?: Record<string, Function> | undefined;
                        mixins?: any[] | undefined;
                        extends?: any;
                        beforeCreate?: (() => void) | undefined;
                        created?: (() => void) | undefined;
                        beforeMount?: (() => void) | undefined;
                        mounted?: (() => void) | undefined;
                        beforeUpdate?: (() => void) | undefined;
                        updated?: (() => void) | undefined;
                        activated?: (() => void) | undefined;
                        deactivated?: (() => void) | undefined;
                        beforeDestroy?: (() => void) | undefined;
                        beforeUnmount?: (() => void) | undefined;
                        destroyed?: (() => void) | undefined;
                        unmounted?: (() => void) | undefined;
                        renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                        errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                        delimiters?: [string, string] | undefined;
                        __differentiator?: string | number | symbol | undefined;
                        __isBuiltIn?: boolean | undefined;
                        __file?: string | undefined;
                        __name?: string | undefined;
                        beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                        beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                        beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                    } | null | undefined;
                    components?: undefined;
                    children: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | {
                        components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                        component?: undefined;
                        children: ({
                            component: import("vue").FunctionalComponent<any, any, any> | {
                                new (...args: any[]): any;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                            } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                                [x: string]: any;
                                setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                    attrs: {
                                        [x: string]: unknown;
                                    };
                                    slots: Readonly<{
                                        [name: string]: import("vue").Slot<any> | undefined;
                                    }>;
                                    emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                    expose: (exposed?: Record<string, any> | undefined) => void;
                                }) => any) | undefined;
                                name?: string | undefined;
                                template?: string | object | undefined;
                                render?: Function | undefined;
                                components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                                directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                                inheritAttrs?: boolean | undefined;
                                emits?: any;
                                slots?: {} | undefined;
                                expose?: string[] | undefined;
                                serverPrefetch?: (() => void | Promise<any>) | undefined;
                                compilerOptions?: {
                                    isCustomElement?: ((tag: string) => boolean) | undefined;
                                    whitespace?: "preserve" | "condense" | undefined;
                                    comments?: boolean | undefined;
                                    delimiters?: [string, string] | undefined;
                                } | undefined;
                                call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                                __defaults?: any;
                                compatConfig?: {
                                    GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                    CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                    CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                    CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                    CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                    CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                    WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                    PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                    V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                    CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                    ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                    ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                    RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                    FILTERS?: boolean | "suppress-warning" | undefined;
                                    PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                    MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                                } | undefined;
                                data?: ((this: any, vm: any) => any) | undefined;
                                computed?: import("vue").ComputedOptions | undefined;
                                methods?: import("vue").MethodOptions | undefined;
                                watch?: {
                                    [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>))[];
                                } | undefined;
                                provide?: import("vue").ComponentProvideOptions | undefined;
                                inject?: {} | string[] | undefined;
                                filters?: Record<string, Function> | undefined;
                                mixins?: any[] | undefined;
                                extends?: any;
                                beforeCreate?: (() => void) | undefined;
                                created?: (() => void) | undefined;
                                beforeMount?: (() => void) | undefined;
                                mounted?: (() => void) | undefined;
                                beforeUpdate?: (() => void) | undefined;
                                updated?: (() => void) | undefined;
                                activated?: (() => void) | undefined;
                                deactivated?: (() => void) | undefined;
                                beforeDestroy?: (() => void) | undefined;
                                beforeUnmount?: (() => void) | undefined;
                                destroyed?: (() => void) | undefined;
                                unmounted?: (() => void) | undefined;
                                renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                                delimiters?: [string, string] | undefined;
                                __differentiator?: string | number | symbol | undefined;
                                __isBuiltIn?: boolean | undefined;
                                __file?: string | undefined;
                                __name?: string | undefined;
                                beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                                beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                                beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                            };
                            components?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | {
                            components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                            component?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | any)[];
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            path: string;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            params?: import("vue-router").RouteParamsRaw | undefined;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | undefined;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any)[];
                    props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                    path: string;
                    redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | undefined;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                    component?: undefined;
                    children?: undefined;
                    redirect?: undefined;
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | {
                    components?: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)> | null | undefined;
                    component?: undefined;
                    children: ({
                        component: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        };
                        components?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | {
                        component?: import("vue").FunctionalComponent<any, any, any> | {
                            new (...args: any[]): any;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                        } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                            [x: string]: any;
                            setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                attrs: {
                                    [x: string]: unknown;
                                };
                                slots: Readonly<{
                                    [name: string]: import("vue").Slot<any> | undefined;
                                }>;
                                emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                expose: (exposed?: Record<string, any> | undefined) => void;
                            }) => any) | undefined;
                            name?: string | undefined;
                            template?: string | object | undefined;
                            render?: Function | undefined;
                            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                            directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                            inheritAttrs?: boolean | undefined;
                            emits?: any;
                            slots?: {} | undefined;
                            expose?: string[] | undefined;
                            serverPrefetch?: (() => void | Promise<any>) | undefined;
                            compilerOptions?: {
                                isCustomElement?: ((tag: string) => boolean) | undefined;
                                whitespace?: "preserve" | "condense" | undefined;
                                comments?: boolean | undefined;
                                delimiters?: [string, string] | undefined;
                            } | undefined;
                            call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                            __isFragment?: undefined;
                            __isTeleport?: undefined;
                            __isSuspense?: undefined;
                            __defaults?: any;
                            compatConfig?: {
                                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                FILTERS?: boolean | "suppress-warning" | undefined;
                                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                            } | undefined;
                            data?: ((this: any, vm: any) => any) | undefined;
                            computed?: import("vue").ComputedOptions | undefined;
                            methods?: import("vue").MethodOptions | undefined;
                            watch?: {
                                [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                    handler: string | import("vue").WatchCallback<any, any>;
                                } & import("vue").WatchOptions<boolean>))[];
                            } | undefined;
                            provide?: import("vue").ComponentProvideOptions | undefined;
                            inject?: {} | string[] | undefined;
                            filters?: Record<string, Function> | undefined;
                            mixins?: any[] | undefined;
                            extends?: any;
                            beforeCreate?: (() => void) | undefined;
                            created?: (() => void) | undefined;
                            beforeMount?: (() => void) | undefined;
                            mounted?: (() => void) | undefined;
                            beforeUpdate?: (() => void) | undefined;
                            updated?: (() => void) | undefined;
                            activated?: (() => void) | undefined;
                            deactivated?: (() => void) | undefined;
                            beforeDestroy?: (() => void) | undefined;
                            beforeUnmount?: (() => void) | undefined;
                            destroyed?: (() => void) | undefined;
                            unmounted?: (() => void) | undefined;
                            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                            delimiters?: [string, string] | undefined;
                            __differentiator?: string | number | symbol | undefined;
                            __isBuiltIn?: boolean | undefined;
                            __file?: string | undefined;
                            __name?: string | undefined;
                            beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                            beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                            beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                        } | null | undefined;
                        components?: undefined;
                        children: ({
                            component: import("vue").FunctionalComponent<any, any, any> | {
                                new (...args: any[]): any;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                            } | import("vue").DefineComponent | (() => Promise<import("vue-router").RouteComponent>) | {
                                [x: string]: any;
                                setup?: ((this: void, props: import("@vue/shared").LooseRequired<any>, ctx: {
                                    attrs: {
                                        [x: string]: unknown;
                                    };
                                    slots: Readonly<{
                                        [name: string]: import("vue").Slot<any> | undefined;
                                    }>;
                                    emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
                                    expose: (exposed?: Record<string, any> | undefined) => void;
                                }) => any) | undefined;
                                name?: string | undefined;
                                template?: string | object | undefined;
                                render?: Function | undefined;
                                components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
                                directives?: Record<string, import("vue").Directive<any, any>> | undefined;
                                inheritAttrs?: boolean | undefined;
                                emits?: any;
                                slots?: {} | undefined;
                                expose?: string[] | undefined;
                                serverPrefetch?: (() => void | Promise<any>) | undefined;
                                compilerOptions?: {
                                    isCustomElement?: ((tag: string) => boolean) | undefined;
                                    whitespace?: "preserve" | "condense" | undefined;
                                    comments?: boolean | undefined;
                                    delimiters?: [string, string] | undefined;
                                } | undefined;
                                call?: ((this: unknown, ...args: unknown[]) => never) | undefined;
                                __isFragment?: undefined;
                                __isTeleport?: undefined;
                                __isSuspense?: undefined;
                                __defaults?: any;
                                compatConfig?: {
                                    GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                                    GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                                    CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                                    CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                                    CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                                    CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                                    CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                                    CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                                    INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                                    OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                                    WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                                    PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                                    V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                                    CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                                    ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                                    ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                                    TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                                    COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                                    RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                                    FILTERS?: boolean | "suppress-warning" | undefined;
                                    PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                                    MODE?: 2 | 3 | ((comp: import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null) => 2 | 3) | undefined;
                                } | undefined;
                                data?: ((this: any, vm: any) => any) | undefined;
                                computed?: import("vue").ComputedOptions | undefined;
                                methods?: import("vue").MethodOptions | undefined;
                                watch?: {
                                    [x: string]: (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>)) | (string | import("vue").WatchCallback<any, any> | ({
                                        handler: string | import("vue").WatchCallback<any, any>;
                                    } & import("vue").WatchOptions<boolean>))[];
                                } | undefined;
                                provide?: import("vue").ComponentProvideOptions | undefined;
                                inject?: {} | string[] | undefined;
                                filters?: Record<string, Function> | undefined;
                                mixins?: any[] | undefined;
                                extends?: any;
                                beforeCreate?: (() => void) | undefined;
                                created?: (() => void) | undefined;
                                beforeMount?: (() => void) | undefined;
                                mounted?: (() => void) | undefined;
                                beforeUpdate?: (() => void) | undefined;
                                updated?: (() => void) | undefined;
                                activated?: (() => void) | undefined;
                                deactivated?: (() => void) | undefined;
                                beforeDestroy?: (() => void) | undefined;
                                beforeUnmount?: (() => void) | undefined;
                                destroyed?: (() => void) | undefined;
                                unmounted?: (() => void) | undefined;
                                renderTracked?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | undefined;
                                errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}> | null, info: string) => boolean | void) | undefined;
                                delimiters?: [string, string] | undefined;
                                __differentiator?: string | number | symbol | undefined;
                                __isBuiltIn?: boolean | undefined;
                                __file?: string | undefined;
                                __name?: string | undefined;
                                beforeRouteEnter?: import("vue-router").NavigationGuardWithThis<undefined> | undefined;
                                beforeRouteUpdate?: import("vue-router").NavigationGuard | undefined;
                                beforeRouteLeave?: import("vue-router").NavigationGuard | undefined;
                            };
                            components?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | {
                            components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                            component?: undefined;
                            children?: undefined;
                            redirect?: undefined;
                            props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                            path: string;
                            alias?: string | string[] | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                            meta?: import("vue-router").RouteMeta | undefined;
                            end?: boolean | undefined;
                            sensitive?: boolean | undefined;
                            strict?: boolean | undefined;
                        } | any | any)[];
                        props?: (boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)) | undefined;
                        path: string;
                        redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            path: string;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | {
                            query?: import("vue-router").LocationQueryRaw | undefined;
                            hash?: string | undefined;
                            name?: import("vue-router").RouteRecordName | undefined;
                            params?: import("vue-router").RouteParamsRaw | undefined;
                            replace?: boolean | undefined;
                            force?: boolean | undefined;
                            state?: import("vue-router").HistoryState | undefined;
                        } | undefined;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | {
                        components: Record<string, import("vue-router").RouteComponent | (() => Promise<import("vue-router").RouteComponent>)>;
                        component?: undefined;
                        children?: undefined;
                        redirect?: undefined;
                        props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                        path: string;
                        alias?: string | string[] | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                        meta?: import("vue-router").RouteMeta | undefined;
                        end?: boolean | undefined;
                        sensitive?: boolean | undefined;
                        strict?: boolean | undefined;
                    } | any | any)[];
                    props?: boolean | Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)> | undefined;
                    path: string;
                    redirect?: string | ((to: import("vue-router").RouteLocation) => import("vue-router").RouteLocationRaw) | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        path: string;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | {
                        query?: import("vue-router").LocationQueryRaw | undefined;
                        hash?: string | undefined;
                        name?: import("vue-router").RouteRecordName | undefined;
                        params?: import("vue-router").RouteParamsRaw | undefined;
                        replace?: boolean | undefined;
                        force?: boolean | undefined;
                        state?: import("vue-router").HistoryState | undefined;
                    } | undefined;
                    alias?: string | string[] | undefined;
                    name?: import("vue-router").RouteRecordName | undefined;
                    beforeEnter?: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
                    meta?: import("vue-router").RouteMeta | undefined;
                    end?: boolean | undefined;
                    sensitive?: boolean | undefined;
                    strict?: boolean | undefined;
                } | any)[] | undefined;
                end?: boolean | undefined;
                sensitive?: boolean | undefined;
                strict?: boolean | undefined;
            })[];
            meta: import("vue-router").RouteMeta;
            props: Record<string, boolean | Record<string, any> | ((to: import("vue-router").RouteLocationNormalized) => Record<string, any>)>;
            beforeEnter: import("vue-router").NavigationGuardWithThis<undefined> | import("vue-router").NavigationGuardWithThis<undefined>[] | undefined;
            leaveGuards: Set<import("vue-router").NavigationGuard>;
            updateGuards: Set<import("vue-router").NavigationGuard>;
            enterCallbacks: Record<string, ((vm: import("vue").ComponentPublicInstance) => any)[]>;
            instances: Record<string, import("vue").ComponentPublicInstance | null | undefined>;
            aliasOf: any | undefined;
        } | undefined;
    }[]>;
    readonly ElBreadcrumb: import("element-plus/es/utils").SFCWithInstall<import("vue").DefineComponent<{
        readonly separator: import("element-plus/es/utils").EpPropFinalized<StringConstructor, unknown, unknown, "/", boolean>;
        readonly separatorIcon: {
            readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => (string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) & {}) | (() => string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) | ((new (...args: any[]) => (string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) & {}) | (() => string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>))[], unknown, unknown>>;
            readonly required: false;
            readonly validator: ((val: unknown) => boolean) | undefined;
            __epPropKey: true;
        };
    }, {
        props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
            readonly separator: import("element-plus/es/utils").EpPropFinalized<StringConstructor, unknown, unknown, "/", boolean>;
            readonly separatorIcon: {
                readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => (string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) & {}) | (() => string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) | ((new (...args: any[]) => (string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) & {}) | (() => string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>))[], unknown, unknown>>;
                readonly required: false;
                readonly validator: ((val: unknown) => boolean) | undefined;
                __epPropKey: true;
            };
        }>> & {
            [x: `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        }>>;
        ns: {
            namespace: import("vue").ComputedRef<string>;
            b: (blockSuffix?: string | undefined) => string;
            e: (element?: string | undefined) => string;
            m: (modifier?: string | undefined) => string;
            be: (blockSuffix?: string | undefined, element?: string | undefined) => string;
            em: (element?: string | undefined, modifier?: string | undefined) => string;
            bm: (blockSuffix?: string | undefined, modifier?: string | undefined) => string;
            bem: (blockSuffix?: string | undefined, element?: string | undefined, modifier?: string | undefined) => string;
            is: {
                (name: string, state: boolean | undefined): string;
                (name: string): string;
            };
            cssVar: (object: Record<string, string>) => Record<string, string>;
            cssVarName: (name: string) => string;
            cssVarBlock: (object: Record<string, string>) => Record<string, string>;
            cssVarBlockName: (name: string) => string;
        };
        breadcrumb: import("vue").Ref<HTMLDivElement | undefined>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        readonly separator: import("element-plus/es/utils").EpPropFinalized<StringConstructor, unknown, unknown, "/", boolean>;
        readonly separatorIcon: {
            readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => (string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) & {}) | (() => string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) | ((new (...args: any[]) => (string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>) & {}) | (() => string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>))[], unknown, unknown>>;
            readonly required: false;
            readonly validator: ((val: unknown) => boolean) | undefined;
            __epPropKey: true;
        };
    }>>, {
        readonly separator: string;
    }, {}>> & {
        BreadcrumbItem: import("vue").DefineComponent<{
            readonly to: import("element-plus/es/utils").EpPropFinalized<(new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw) | ((new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw))[], unknown, unknown, "", boolean>;
            readonly replace: import("element-plus/es/utils").EpPropFinalized<BooleanConstructor, unknown, unknown, false, boolean>;
        }, {
            props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
                readonly to: import("element-plus/es/utils").EpPropFinalized<(new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw) | ((new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw))[], unknown, unknown, "", boolean>;
                readonly replace: import("element-plus/es/utils").EpPropFinalized<BooleanConstructor, unknown, unknown, false, boolean>;
            }>> & {
                [x: `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
            }>>;
            instance: import("vue").ComponentInternalInstance;
            breadcrumbContext: import("element-plus").BreadcrumbProps | undefined;
            ns: {
                namespace: import("vue").ComputedRef<string>;
                b: (blockSuffix?: string | undefined) => string;
                e: (element?: string | undefined) => string;
                m: (modifier?: string | undefined) => string;
                be: (blockSuffix?: string | undefined, element?: string | undefined) => string;
                em: (element?: string | undefined, modifier?: string | undefined) => string;
                bm: (blockSuffix?: string | undefined, modifier?: string | undefined) => string;
                bem: (blockSuffix?: string | undefined, element?: string | undefined, modifier?: string | undefined) => string;
                is: {
                    (name: string, state: boolean | undefined): string;
                    (name: string): string;
                };
                cssVar: (object: Record<string, string>) => Record<string, string>;
                cssVarName: (name: string) => string;
                cssVarBlock: (object: Record<string, string>) => Record<string, string>;
                cssVarBlockName: (name: string) => string;
            };
            router: import("vue-router").Router;
            link: import("vue").Ref<HTMLSpanElement | undefined>;
            onClick: () => void;
            ElIcon: import("element-plus/es/utils").SFCWithInstall<import("vue").DefineComponent<{
                readonly size: {
                    readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | number) | (() => string | number) | ((new (...args: any[]) => string | number) | (() => string | number))[], unknown, unknown>>;
                    readonly required: false;
                    readonly validator: ((val: unknown) => boolean) | undefined;
                    __epPropKey: true;
                };
                readonly color: {
                    readonly type: import("vue").PropType<string>;
                    readonly required: false;
                    readonly validator: ((val: unknown) => boolean) | undefined;
                    __epPropKey: true;
                };
            }, {
                props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
                    readonly size: {
                        readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | number) | (() => string | number) | ((new (...args: any[]) => string | number) | (() => string | number))[], unknown, unknown>>;
                        readonly required: false;
                        readonly validator: ((val: unknown) => boolean) | undefined;
                        __epPropKey: true;
                    };
                    readonly color: {
                        readonly type: import("vue").PropType<string>;
                        readonly required: false;
                        readonly validator: ((val: unknown) => boolean) | undefined;
                        __epPropKey: true;
                    };
                }>> & {
                    [x: `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
                }>>;
                ns: {
                    namespace: import("vue").ComputedRef<string>;
                    b: (blockSuffix?: string | undefined) => string;
                    e: (element?: string | undefined) => string;
                    m: (modifier?: string | undefined) => string;
                    be: (blockSuffix?: string | undefined, element?: string | undefined) => string;
                    em: (element?: string | undefined, modifier?: string | undefined) => string;
                    bm: (blockSuffix?: string | undefined, modifier?: string | undefined) => string;
                    bem: (blockSuffix?: string | undefined, element?: string | undefined, modifier?: string | undefined) => string;
                    is: {
                        (name: string, state: boolean | undefined): string;
                        (name: string): string;
                    };
                    cssVar: (object: Record<string, string>) => Record<string, string>;
                    cssVarName: (name: string) => string;
                    cssVarBlock: (object: Record<string, string>) => Record<string, string>;
                    cssVarBlockName: (name: string) => string;
                };
                style: import("vue").ComputedRef<import("vue").CSSProperties>;
            }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
                readonly size: {
                    readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | number) | (() => string | number) | ((new (...args: any[]) => string | number) | (() => string | number))[], unknown, unknown>>;
                    readonly required: false;
                    readonly validator: ((val: unknown) => boolean) | undefined;
                    __epPropKey: true;
                };
                readonly color: {
                    readonly type: import("vue").PropType<string>;
                    readonly required: false;
                    readonly validator: ((val: unknown) => boolean) | undefined;
                    __epPropKey: true;
                };
            }>>, {}, {}>> & Record<string, any>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            readonly to: import("element-plus/es/utils").EpPropFinalized<(new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw) | ((new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw))[], unknown, unknown, "", boolean>;
            readonly replace: import("element-plus/es/utils").EpPropFinalized<BooleanConstructor, unknown, unknown, false, boolean>;
        }>>, {
            readonly replace: import("element-plus/es/utils").EpPropMergeType<BooleanConstructor, unknown, unknown>;
            readonly to: import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw) | ((new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw))[], unknown, unknown>;
        }, {}>;
    };
    readonly ElBreadcrumbItem: import("element-plus/es/utils").SFCWithInstall<import("vue").DefineComponent<{
        readonly to: import("element-plus/es/utils").EpPropFinalized<(new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw) | ((new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw))[], unknown, unknown, "", boolean>;
        readonly replace: import("element-plus/es/utils").EpPropFinalized<BooleanConstructor, unknown, unknown, false, boolean>;
    }, {
        props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
            readonly to: import("element-plus/es/utils").EpPropFinalized<(new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw) | ((new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw))[], unknown, unknown, "", boolean>;
            readonly replace: import("element-plus/es/utils").EpPropFinalized<BooleanConstructor, unknown, unknown, false, boolean>;
        }>> & {
            [x: `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        }>>;
        instance: import("vue").ComponentInternalInstance;
        breadcrumbContext: import("element-plus").BreadcrumbProps | undefined;
        ns: {
            namespace: import("vue").ComputedRef<string>;
            b: (blockSuffix?: string | undefined) => string;
            e: (element?: string | undefined) => string;
            m: (modifier?: string | undefined) => string;
            be: (blockSuffix?: string | undefined, element?: string | undefined) => string;
            em: (element?: string | undefined, modifier?: string | undefined) => string;
            bm: (blockSuffix?: string | undefined, modifier?: string | undefined) => string;
            bem: (blockSuffix?: string | undefined, element?: string | undefined, modifier?: string | undefined) => string;
            is: {
                (name: string, state: boolean | undefined): string;
                (name: string): string;
            };
            cssVar: (object: Record<string, string>) => Record<string, string>;
            cssVarName: (name: string) => string;
            cssVarBlock: (object: Record<string, string>) => Record<string, string>;
            cssVarBlockName: (name: string) => string;
        };
        router: import("vue-router").Router;
        link: import("vue").Ref<HTMLSpanElement | undefined>;
        onClick: () => void;
        ElIcon: import("element-plus/es/utils").SFCWithInstall<import("vue").DefineComponent<{
            readonly size: {
                readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | number) | (() => string | number) | ((new (...args: any[]) => string | number) | (() => string | number))[], unknown, unknown>>;
                readonly required: false;
                readonly validator: ((val: unknown) => boolean) | undefined;
                __epPropKey: true;
            };
            readonly color: {
                readonly type: import("vue").PropType<string>;
                readonly required: false;
                readonly validator: ((val: unknown) => boolean) | undefined;
                __epPropKey: true;
            };
        }, {
            props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
                readonly size: {
                    readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | number) | (() => string | number) | ((new (...args: any[]) => string | number) | (() => string | number))[], unknown, unknown>>;
                    readonly required: false;
                    readonly validator: ((val: unknown) => boolean) | undefined;
                    __epPropKey: true;
                };
                readonly color: {
                    readonly type: import("vue").PropType<string>;
                    readonly required: false;
                    readonly validator: ((val: unknown) => boolean) | undefined;
                    __epPropKey: true;
                };
            }>> & {
                [x: `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
            }>>;
            ns: {
                namespace: import("vue").ComputedRef<string>;
                b: (blockSuffix?: string | undefined) => string;
                e: (element?: string | undefined) => string;
                m: (modifier?: string | undefined) => string;
                be: (blockSuffix?: string | undefined, element?: string | undefined) => string;
                em: (element?: string | undefined, modifier?: string | undefined) => string;
                bm: (blockSuffix?: string | undefined, modifier?: string | undefined) => string;
                bem: (blockSuffix?: string | undefined, element?: string | undefined, modifier?: string | undefined) => string;
                is: {
                    (name: string, state: boolean | undefined): string;
                    (name: string): string;
                };
                cssVar: (object: Record<string, string>) => Record<string, string>;
                cssVarName: (name: string) => string;
                cssVarBlock: (object: Record<string, string>) => Record<string, string>;
                cssVarBlockName: (name: string) => string;
            };
            style: import("vue").ComputedRef<import("vue").CSSProperties>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            readonly size: {
                readonly type: import("vue").PropType<import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | number) | (() => string | number) | ((new (...args: any[]) => string | number) | (() => string | number))[], unknown, unknown>>;
                readonly required: false;
                readonly validator: ((val: unknown) => boolean) | undefined;
                __epPropKey: true;
            };
            readonly color: {
                readonly type: import("vue").PropType<string>;
                readonly required: false;
                readonly validator: ((val: unknown) => boolean) | undefined;
                __epPropKey: true;
            };
        }>>, {}, {}>> & Record<string, any>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        readonly to: import("element-plus/es/utils").EpPropFinalized<(new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw) | ((new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw))[], unknown, unknown, "", boolean>;
        readonly replace: import("element-plus/es/utils").EpPropFinalized<BooleanConstructor, unknown, unknown, false, boolean>;
    }>>, {
        readonly replace: import("element-plus/es/utils").EpPropMergeType<BooleanConstructor, unknown, unknown>;
        readonly to: import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw) | ((new (...args: any[]) => string | import("vue-router").RouteLocationPathRaw | import("vue-router").RouteLocationNamedRaw) | (() => import("vue-router").RouteLocationRaw))[], unknown, unknown>;
    }, {}>>;
    readonly isFunction: (val: any) => boolean;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    routes: {
        type: ArrayConstructor;
        required: false;
        default: () => never[];
    };
    replace: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    renderTitle: {
        type: FunctionConstructor;
        required: false;
    };
}>>, {
    replace: boolean;
    routes: unknown[];
}, {}>;
export default _default;
