'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var elementPlus = require('element-plus');
require('../../../hooks/index.js');
var useLocale = require('../../../hooks/useLocale.js');

const _hoisted_1 = { class: "plus-dialog-body" };
var _sfc_main = /* @__PURE__ */ vue.defineComponent({
  ...{
    name: "PlusDialog"
  },
  __name: "index",
  props: {
    modelValue: { type: Boolean, required: false, default: false },
    confirmText: { type: String, required: false, default: "" },
    cancelText: { type: String, required: false, default: "" },
    confirmLoading: { type: Boolean, required: false, default: false },
    hasFooter: { type: Boolean, required: false, default: true },
    footerAlign: { type: String, required: false, default: "right" },
    top: { type: String, required: false, default: "15vh" },
    width: { type: String, required: false, default: "460px" },
    title: { type: String, required: false, default: "" }
  },
  emits: ["update:modelValue", "cancel", "confirm"],
  setup(__props, { emit }) {
    const props = __props;
    const style = vue.computed(() => ({
      justifyContent: props.footerAlign === "left" ? "flex-start" : props.footerAlign === "center" ? "center" : "flex-end"
    }));
    const subVisible = vue.ref(false);
    const { t } = useLocale.useLocale();
    vue.watchEffect(() => {
      subVisible.value = props.modelValue;
    });
    const handleConfirm = () => {
      emit("confirm");
    };
    const handleCancel = () => {
      emit("update:modelValue", false);
      emit("cancel");
    };
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createBlock(vue.unref(elementPlus.ElDialog), vue.mergeProps({
        modelValue: subVisible.value,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => subVisible.value = $event),
        top: _ctx.top,
        width: _ctx.width,
        title: _ctx.title || vue.unref(t)("plus.dialog.title"),
        "close-on-click-modal": false,
        "close-on-press-escape": false,
        "append-to-body": false,
        "before-close": handleCancel,
        class: "plus-dialog"
      }, _ctx.$attrs), vue.createSlots({
        default: vue.withCtx(() => [
          vue.createElementVNode("div", _hoisted_1, [
            vue.renderSlot(_ctx.$slots, "default")
          ])
        ]),
        _: 2
        /* DYNAMIC */
      }, [
        _ctx.$slots.header ? {
          name: "header",
          fn: vue.withCtx(() => [
            vue.renderSlot(_ctx.$slots, "header")
          ]),
          key: "0"
        } : void 0,
        _ctx.hasFooter ? {
          name: "footer",
          fn: vue.withCtx(() => [
            vue.createElementVNode(
              "div",
              {
                class: "plus-dialog-footer",
                style: vue.normalizeStyle(style.value)
              },
              [
                vue.renderSlot(_ctx.$slots, "footer", {}, () => [
                  vue.createVNode(vue.unref(elementPlus.ElButton), { onClick: handleCancel }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(
                        vue.toDisplayString(_ctx.cancelText || vue.unref(t)("plus.dialog.cancelText")),
                        1
                        /* TEXT */
                      )
                    ]),
                    _: 1
                    /* STABLE */
                  }),
                  vue.createVNode(vue.unref(elementPlus.ElButton), {
                    type: "primary",
                    loading: _ctx.confirmLoading,
                    onClick: handleConfirm
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(
                        vue.toDisplayString(_ctx.confirmText || vue.unref(t)("plus.dialog.confirmText")),
                        1
                        /* TEXT */
                      )
                    ]),
                    _: 1
                    /* STABLE */
                  }, 8, ["loading"])
                ])
              ],
              4
              /* STYLE */
            )
          ]),
          key: "1"
        } : void 0
      ]), 1040, ["modelValue", "top", "width", "title"]);
    };
  }
});

exports.default = _sfc_main;
